"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.requrieAuth = exports.requireAdmin = exports.errorHandler = exports.checkBlockedUser = exports.setCurrentUser = void 0;
const not_authorized_error_1 = require("./errors/not-authorized-error");
const user_blocked__error_1 = require("./errors/user-blocked.-error");
const custom_Error_1 = require("./errors/custom-Error");
const admin_require_error_1 = require("./errors/admin-require-error");
const setCurrentUser = (req, res, next) => {
    const user = {
        userId: "some-user-id",
        userEmail: "user@example.com",
        isAdmin: false,
        isBlocked: false,
    };
    req.user = user;
    next();
};
exports.setCurrentUser = setCurrentUser;
const checkBlockedUser = (req, res, next) => {
    if (!req.user) {
        throw new not_authorized_error_1.NotAuthorizedError();
    }
    if (req.user.isBlocked) {
        throw new user_blocked__error_1.UserBlockedError();
    }
    next();
};
exports.checkBlockedUser = checkBlockedUser;
const errorHandler = (err, req, res, next) => {
    if (err instanceof custom_Error_1.CustomError) {
        res.status(err.statusCode).json({
            success: false,
            error: err.serializeErrors(),
            message: err.message || "Something went wrong",
        });
    }
    res.status(400).json({
        success: false,
        error: err.message || err,
        message: "Something went wrong!",
    });
};
exports.errorHandler = errorHandler;
const requireAdmin = (req, res, next) => {
    if (!req.user) {
        throw new not_authorized_error_1.NotAuthorizedError();
    }
    if (!req.user.isAdmin) {
        throw new admin_require_error_1.AdminRequiredError();
    }
    next();
};
exports.requireAdmin = requireAdmin;
const requrieAuth = (req, res, next) => {
    if (!req.user) {
        throw new not_authorized_error_1.NotAuthorizedError();
    }
    next();
};
exports.requrieAuth = requrieAuth;
